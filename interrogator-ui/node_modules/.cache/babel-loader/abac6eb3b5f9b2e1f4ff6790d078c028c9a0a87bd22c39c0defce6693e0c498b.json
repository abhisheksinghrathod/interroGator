{"ast":null,"code":"var _jsxFileName = \"/Users/bhumika/myprojects/interrogator/interrogator-ui/src/components/ResumeUpload.js\",\n  _s = $RefreshSig$();\n// src/components/ResumeUpload.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResumeUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [resumes, setResumes] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const navigate = useNavigate();\n\n  // 1️⃣ Fetch existing resumes\n  useEffect(() => {\n    async function fetchResumes() {\n      try {\n        var _res$data$results;\n        const res = await api.get('resumes/');\n        console.log('GET /api/resumes/ →', res.data);\n        // Support paginated or plain-array responses:\n        const list = Array.isArray(res.data) ? res.data : (_res$data$results = res.data.results) !== null && _res$data$results !== void 0 ? _res$data$results : [];\n        setResumes(list);\n      } catch (err) {\n        console.error('Error fetching resumes:', err);\n      }\n    }\n    fetchResumes();\n  }, []);\n\n  // 2️⃣ Handle file selection\n  const onFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // 3️⃣ Upload resume\n  const onUpload = async () => {\n    if (!file) return alert('Please select a file first.');\n    const form = new FormData();\n    form.append('file', file);\n    try {\n      var _listRes$data$results;\n      const uploadRes = await api.post('resumes/', form, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('POST /api/resumes/ →', uploadRes.data);\n\n      // Refresh list immediately after upload\n      const listRes = await api.get('resumes/');\n      console.log('GET /api/resumes/ after upload →', listRes.data);\n      const list = Array.isArray(listRes.data) ? listRes.data : (_listRes$data$results = listRes.data.results) !== null && _listRes$data$results !== void 0 ? _listRes$data$results : [];\n      setResumes(list);\n      setFile(null);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('Upload failed. See console for details.');\n    }\n  };\n\n  // 4️⃣ Start interview for selected resume\n  const onStartInterview = async () => {\n    if (!selected) return alert('Please select a resume.');\n    try {\n      const res = await api.post('sessions/', {\n        resume_id: selected\n      });\n      console.log('POST /api/sessions/ →', res.data);\n      navigate(`/interview/${res.data.id}`);\n    } catch (err) {\n      console.error('Could not start interview:', err);\n      alert('Could not start interview. See console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.doc,.docx\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUpload,\n      disabled: !file,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: \"Your Resumes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), resumes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No resumes found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: resumes.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          margin: '0.5rem 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"resume\",\n            value: r.id,\n            checked: selected === r.id,\n            onChange: () => setSelected(r.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), ' ', new Date(r.uploaded_at).toLocaleDateString(), \" \\u2014\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: r.file,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onStartInterview,\n      disabled: !selected,\n      style: {\n        marginTop: '1rem'\n      },\n      children: \"Start Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeUpload, \"qU9Cotdsgg9xLkZcohMMB0tXcUY=\", false, function () {\n  return [useNavigate];\n});\n_c = ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","ResumeUpload","_s","file","setFile","resumes","setResumes","selected","setSelected","navigate","fetchResumes","_res$data$results","res","get","console","log","data","list","Array","isArray","results","err","error","onFileChange","e","target","files","onUpload","alert","form","FormData","append","_listRes$data$results","uploadRes","post","headers","listRes","onStartInterview","resume_id","id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","marginTop","length","map","r","margin","name","value","checked","Date","uploaded_at","toLocaleDateString","href","rel","_c","$RefreshReg$"],"sources":["/Users/bhumika/myprojects/interrogator/interrogator-ui/src/components/ResumeUpload.js"],"sourcesContent":["// src/components/ResumeUpload.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api/client';\n\nexport default function ResumeUpload() {\n  const [file, setFile] = useState(null);\n  const [resumes, setResumes] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const navigate = useNavigate();\n\n  // 1️⃣ Fetch existing resumes\n  useEffect(() => {\n    async function fetchResumes() {\n      try {\n        const res = await api.get('resumes/');\n        console.log('GET /api/resumes/ →', res.data);\n        // Support paginated or plain-array responses:\n        const list = Array.isArray(res.data)\n          ? res.data\n          : res.data.results ?? [];\n        setResumes(list);\n      } catch (err) {\n        console.error('Error fetching resumes:', err);\n      }\n    }\n    fetchResumes();\n  }, []);\n\n  // 2️⃣ Handle file selection\n  const onFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // 3️⃣ Upload resume\n  const onUpload = async () => {\n    if (!file) return alert('Please select a file first.');\n    const form = new FormData();\n    form.append('file', file);\n\n    try {\n      const uploadRes = await api.post('resumes/', form, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      console.log('POST /api/resumes/ →', uploadRes.data);\n\n      // Refresh list immediately after upload\n      const listRes = await api.get('resumes/');\n      console.log('GET /api/resumes/ after upload →', listRes.data);\n      const list = Array.isArray(listRes.data)\n        ? listRes.data\n        : listRes.data.results ?? [];\n      setResumes(list);\n      setFile(null);\n    } catch (err) {\n      console.error('Upload failed:', err);\n      alert('Upload failed. See console for details.');\n    }\n  };\n\n  // 4️⃣ Start interview for selected resume\n  const onStartInterview = async () => {\n    if (!selected) return alert('Please select a resume.');\n    try {\n      const res = await api.post('sessions/', { resume_id: selected });\n      console.log('POST /api/sessions/ →', res.data);\n      navigate(`/interview/${res.data.id}`);\n    } catch (err) {\n      console.error('Could not start interview:', err);\n      alert('Could not start interview. See console for details.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Upload Your Resume</h2>\n      <input\n        type=\"file\"\n        accept=\".pdf,.doc,.docx\"\n        onChange={onFileChange}\n      />\n      <button onClick={onUpload} disabled={!file}>\n        Upload\n      </button>\n\n      <h3 style={{ marginTop: '2rem' }}>Your Resumes</h3>\n      {resumes.length === 0 ? (\n        <p>No resumes found.</p>\n      ) : (\n        <ul>\n          {resumes.map(r => (\n            <li key={r.id} style={{ margin: '0.5rem 0' }}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"resume\"\n                  value={r.id}\n                  checked={selected === r.id}\n                  onChange={() => setSelected(r.id)}\n                />{' '}\n                {new Date(r.uploaded_at).toLocaleDateString()} &mdash;{' '}\n                <a href={r.file} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Download\n                </a>\n              </label>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      <button\n        onClick={onStartInterview}\n        disabled={!selected}\n        style={{ marginTop: '1rem' }}\n      >\n        Start Interview\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,eAAec,YAAYA,CAAA,EAAG;MAC5B,IAAI;QAAA,IAAAC,iBAAA;QACF,MAAMC,GAAG,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC;QACrCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,GAAG,CAACI,IAAI,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACP,GAAG,CAACI,IAAI,CAAC,GAChCJ,GAAG,CAACI,IAAI,IAAAL,iBAAA,GACRC,GAAG,CAACI,IAAI,CAACI,OAAO,cAAAT,iBAAA,cAAAA,iBAAA,GAAI,EAAE;QAC1BL,UAAU,CAACW,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZP,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAAC;MAC/C;IACF;IACAX,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMa,YAAY,GAAGC,CAAC,IAAI;IACxBpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACxB,IAAI,EAAE,OAAOyB,KAAK,CAAC,6BAA6B,CAAC;IACtD,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAE5B,IAAI,CAAC;IAEzB,IAAI;MAAA,IAAA6B,qBAAA;MACF,MAAMC,SAAS,GAAG,MAAMnC,GAAG,CAACoC,IAAI,CAAC,UAAU,EAAEL,IAAI,EAAE;QACjDM,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFrB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEkB,SAAS,CAACjB,IAAI,CAAC;;MAEnD;MACA,MAAMoB,OAAO,GAAG,MAAMtC,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC;MACzCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEqB,OAAO,CAACpB,IAAI,CAAC;MAC7D,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACiB,OAAO,CAACpB,IAAI,CAAC,GACpCoB,OAAO,CAACpB,IAAI,IAAAgB,qBAAA,GACZI,OAAO,CAACpB,IAAI,CAACI,OAAO,cAAAY,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MAC9B1B,UAAU,CAACW,IAAI,CAAC;MAChBb,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAAC;MACpCO,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAAC9B,QAAQ,EAAE,OAAOqB,KAAK,CAAC,yBAAyB,CAAC;IACtD,IAAI;MACF,MAAMhB,GAAG,GAAG,MAAMd,GAAG,CAACoC,IAAI,CAAC,WAAW,EAAE;QAAEI,SAAS,EAAE/B;MAAS,CAAC,CAAC;MAChEO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC9CP,QAAQ,CAAC,cAAcG,GAAG,CAACI,IAAI,CAACuB,EAAE,EAAE,CAAC;IACvC,CAAC,CAAC,OAAOlB,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,4BAA4B,EAAED,GAAG,CAAC;MAChDO,KAAK,CAAC,qDAAqD,CAAC;IAC9D;EACF,CAAC;EAED,oBACE5B,OAAA;IAAKwC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B1C,OAAA;MAAA0C,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B9C,OAAA;MACE+C,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,iBAAiB;MACxBC,QAAQ,EAAE1B;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF9C,OAAA;MAAQkD,OAAO,EAAEvB,QAAS;MAACwB,QAAQ,EAAE,CAAChD,IAAK;MAAAuC,QAAA,EAAC;IAE5C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET9C,OAAA;MAAIwC,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClDzC,OAAO,CAACgD,MAAM,KAAK,CAAC,gBACnBrD,OAAA;MAAA0C,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExB9C,OAAA;MAAA0C,QAAA,EACGrC,OAAO,CAACiD,GAAG,CAACC,CAAC,iBACZvD,OAAA;QAAewC,KAAK,EAAE;UAAEgB,MAAM,EAAE;QAAW,CAAE;QAAAd,QAAA,eAC3C1C,OAAA;UAAA0C,QAAA,gBACE1C,OAAA;YACE+C,IAAI,EAAC,OAAO;YACZU,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEH,CAAC,CAAChB,EAAG;YACZoB,OAAO,EAAEpD,QAAQ,KAAKgD,CAAC,CAAChB,EAAG;YAC3BU,QAAQ,EAAEA,CAAA,KAAMzC,WAAW,CAAC+C,CAAC,CAAChB,EAAE;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,EAAC,GAAG,EACL,IAAIc,IAAI,CAACL,CAAC,CAACM,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,SAAQ,EAAC,GAAG,eAC1D9D,OAAA;YAAG+D,IAAI,EAAER,CAAC,CAACpD,IAAK;YAACsB,MAAM,EAAC,QAAQ;YAACuC,GAAG,EAAC,qBAAqB;YAAAtB,QAAA,EAAC;UAE3D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GAbDS,CAAC,CAAChB,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcT,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eAED9C,OAAA;MACEkD,OAAO,EAAEb,gBAAiB;MAC1Bc,QAAQ,EAAE,CAAC5C,QAAS;MACpBiC,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,EAC9B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC5C,EAAA,CAlHuBD,YAAY;EAAA,QAIjBJ,WAAW;AAAA;AAAAoE,EAAA,GAJNhE,YAAY;AAAA,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
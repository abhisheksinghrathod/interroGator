{"ast":null,"code":"var _jsxFileName = \"/Users/bhumika/myprojects/interrogator/interrogator-ui/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport ResumeUpload from './components/ResumeUpload';\nimport InterviewPage from './components/InterviewPage';\nimport api from './api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const handleSelect = async resumeId => {\n    try {\n      // 1) create a new session for this resume\n      const res = await api.post('sessions/', {\n        resume: resumeId\n      });\n      const sessionId = res.data.id;\n      // 2) navigate to the InterviewPage\n      navigate(`/interview/${sessionId}`);\n    } catch (err) {\n      console.error('Failed to start session:', err);\n      // handle/display error as needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ResumeUpload, {\n    onSelect: handleSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(Home, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/interview/:sessionId\",\n        element: /*#__PURE__*/_jsxDEV(InterviewPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useNavigate","ResumeUpload","InterviewPage","api","jsxDEV","_jsxDEV","Home","_s","navigate","handleSelect","resumeId","res","post","resume","sessionId","data","id","err","console","error","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","path","element","_c2","$RefreshReg$"],"sources":["/Users/bhumika/myprojects/interrogator/interrogator-ui/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate\n} from 'react-router-dom';\nimport ResumeUpload from './components/ResumeUpload';\nimport InterviewPage from './components/InterviewPage';\nimport api from './api/client';\n\nfunction Home() {\n  const navigate = useNavigate();\n\n  const handleSelect = async (resumeId) => {\n    try {\n      // 1) create a new session for this resume\n      const res = await api.post('sessions/', { resume: resumeId });\n      const sessionId = res.data.id;\n      // 2) navigate to the InterviewPage\n      navigate(`/interview/${sessionId}`);\n    } catch (err) {\n      console.error('Failed to start session:', err);\n      // handle/display error as needed\n    }\n  };\n\n  return <ResumeUpload onSelect={handleSelect} />;\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"/interview/:sessionId\"\n          element={<InterviewPage />}\n        />\n      </Routes>\n    </Router>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,WAAW,QACN,kBAAkB;AACzB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF;MACA,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,WAAW,EAAE;QAAEC,MAAM,EAAEH;MAAS,CAAC,CAAC;MAC7D,MAAMI,SAAS,GAAGH,GAAG,CAACI,IAAI,CAACC,EAAE;MAC7B;MACAR,QAAQ,CAAC,cAAcM,SAAS,EAAE,CAAC;IACrC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAC9C;IACF;EACF,CAAC;EAED,oBAAOZ,OAAA,CAACJ,YAAY;IAACmB,QAAQ,EAAEX;EAAa;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjD;AAACjB,EAAA,CAjBQD,IAAI;EAAA,QACMN,WAAW;AAAA;AAAAyB,EAAA,GADrBnB,IAAI;AAmBb,eAAe,SAASoB,GAAGA,CAAA,EAAG;EAC5B,oBACErB,OAAA,CAACR,MAAM;IAAA8B,QAAA,eACLtB,OAAA,CAACP,MAAM;MAAA6B,QAAA,gBACLtB,OAAA,CAACN,KAAK;QAAC6B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAExB,OAAA,CAACC,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCnB,OAAA,CAACN,KAAK;QACJ6B,IAAI,EAAC,uBAAuB;QAC5BC,OAAO,eAAExB,OAAA,CAACH,aAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACM,GAAA,GAZuBJ,GAAG;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}